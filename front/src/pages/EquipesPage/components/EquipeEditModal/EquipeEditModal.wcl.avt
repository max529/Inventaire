import { Form, FormHandler } from "Aventus@UI:Aventus.Form.package.avt";
import { Modal, type ModalOptions } from "../../../../components/interaction/Modal/Modal.wcl.avt";
import { Equipe } from "../../../../generated/app/Models/Equipe.lib.avt";
import { EquipeRAM } from "../../../../ram/Equipe.ram.avt";
import { Required } from "Aventus@UI:Aventus.Form.Validators.package.avt";
import type { EquipeRequest } from "../../../../generated/app/Http/Controllers/Equipe/EquipeRequest.lib.avt";
import { EquipeResource } from "../../../../generated/app/Http/Controllers/Equipe/EquipeResource.lib.avt";

export class EquipeEditModal extends Modal<EquipeResource> implements Aventus.DefaultComponent {

    //#region static
    public static async open(item?: EquipeResource): Promise<EquipeResource | null> {
        const modal = new EquipeEditModal();
        modal.options.title = item ? "Edition d'une équipe" : "Création d'une équipe";
        const clone = item ? item.clone() : new EquipeResource();
        if(!clone.id) {
            clone.id = 0;
        }
        modal.form.item = EquipeRAM.getInstance().toRequest(clone);
        return await EquipeEditModal._show(modal);
    }
    //#endregion


    //#region props
    private form: FormHandler<EquipeRequest>;
    //#endregion


    //#region variables

    //#endregion


    //#region constructor
    public constructor() {
        super();
        this.form = Form.create<EquipeRequest>({
            nom: new Required("Le nom est requis"),
        });
    }
    //#endregion


    //#region methods
    /**
     * @inheritdoc
     */
    public override configure(): ModalOptions<Equipe> {
        return { title: "" };
    }


    /**
     * 
     */
    protected async submit() {
        const result = await this.form.submit(EquipeRAM.getInstance().saveWithError);
        if(result?.result) {
            this.resolve(result.result);
        }
    }
    //#endregion

}